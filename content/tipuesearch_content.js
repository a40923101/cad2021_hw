var tipuesearch = {"pages": [{'title': 'About', 'text': '本學期的電腦輔助設計實習, 要求每一位學員根據本 HW template 的格式建立個人的作業倉儲與網頁. \n \n 你的學號  40923101\xa0\xa0 \n 網站倉儲:\xa0 https://github.com/a40923101/cad2021_hw \xa0 \n 網站連結:  https://a40923101.github.io/cad2021_hw \xa0 \n 其他與作者或作業相關資料說明或介紹 \n', 'tags': '', 'url': 'About.html'}, {'title': '筆記', 'text': '', 'tags': '', 'url': '筆記.html'}, {'title': '9444', 'text': '先打指令\xa0 cd tmp \n 再打 \xa0 cd cad2021_hw \n 然後打 \xa0 cms \xa0 \n 就會得到網址  https://127.0.0.1:9444/ \xa0複製下來 \n \n 按\xa0 login\xa0 登入(密碼\xa0 admin \xa0) \n', 'tags': '', 'url': '9444.html'}, {'title': '網際網路', 'text': '學校網路使用\xa0 ivp6 ，所以要把\xa0 ivp4\xa0 關掉 \n \n 設定DNS伺服器位址\xa0 2001:b000:168::1 \n \n 在小黑窗打上  ipconfig /all ，確認網路位址 \n \n \n 設定HTTY Proxy\xa0 2001:288:6004:17::42 \n \n 設定完成後，就可以上網了 \n', 'tags': '', 'url': '網際網路.html'}, {'title': 'ivp4', 'text': '在學校我們使用\xa0 ivp6 ，在家可以使用\xa0 ivp4 ，但\xa0 ivp4\xa0 有些地方要修改 \n 先開啟\xa0 start_ipv6 \n 然後把\xa0 start_ipv6\xa0 及\xa0 start_ipv4\xa0 都放進小白窗 \n \n \n 將 start_ipv6 複製下來到 start_ipv4 ，並按下 Search 的 replace \n \n 將\xa0 home_ipv6 \xa0 修改成\xa0 home_ipv4 ，並按下\xa0 Replace All \n \n 修改好後就可以\xa0 Save \n \n', 'tags': '', 'url': 'ivp4.html'}, {'title': 'wink', 'text': 'Google尋找  debugmode wink \n \n 將  wink  下載 \n \n 點開  winksetup ，按下  I Agree \n \n 按\xa0 Browse\xa0 將資料存在\xa0 date\xa0 裡的\xa0 wink ，最後\xa0 Install\xa0 就下載好了 \n \n 點開  wink.exe \n \n 開啟後就可以使用  wink  製作影片 \n \n \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n 將\xa0 wink\xa0 放進倉儲裡面 \n 先到老師的\xa0 wink\xa0 影片開啟原始碼 \n \n 複製原始碼 \n 將複製下來的原始碼貼在\xa0 Source code \n \n 接著開啟錄好的\xa0 wink\xa0 影片開啟原始碼 \n \n 在複製一次原始碼 \n \n 將複製下來的原始碼貼在\xa0 Source code \n 並且修改 \n <video width="960" height="540" \xa0(影片的尺寸) \n data-dirname=" /static " data-varname="winkVideoData" video=""> \n <source src=" /downloads/ wink 4.mp4" \n \n 要將影片放進\xa0 downloads  裡面 \n \n 就可以看到\xa0 wink\xa0 影片 \n \n \n', 'tags': '', 'url': 'wink.html'}, {'title': 'run', 'text': '先複製老師給的程式碼 \n \n 點開Source code \n \n 將剛剛複製的程式碼放進去就可以了 \n \n  導入 brython 程式庫  \n \n \n  啟動 Brython  \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n \n \n', 'tags': '', 'url': 'run.html'}, {'title': 'W11', 'text': 'NX及SolveSpace下載檔 \n \n Wink查驗影片 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W13', 'text': '零組件繪圖進度 \n 目前使用  NX  繪製了31個零件， \n 剩下齒輪零件沒完成， \n 我會使用  SOLIDWORKS  來匯入齒輪， \n 就可以完成所有的零件了。 \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n \n \n \n meArm 手臂 \n meArm  機械手臂臂第一軸 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n meArm  機械手臂其中的一至三軸 \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W13.html'}, {'title': 'HW1', 'text': '每一位學員透過程式亂數分配所使用的兩套參數式  CAD  套件 \n 從軟體發展緣起開始進行介紹 \n 經過教育版軟體套件檔案的取得 下載安裝 以及 配置使用。 \n 我分配到的是  NX   和  SOLVESPACE  這兩種 \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'SolveSpace', 'text': 'SolveSpace 是一個免費和開源的\xa0 2D  和  3D CAD \xa0 程序 \n 它是一個基於約束的 參數建模器 ，具有簡單的機械仿真功能 \n Solvespace\xa0 是一個 輕量級的程序 \n  它加載速度快效果很佳 \n 這個程序是由 喬納森·韋斯休斯 Jonathan Westhues  和 志願者社區 開發 \n 無論我們是在 2D 草圖拉伸還是裝配上 \n Solvespace  用戶界面都是 靜態的 \n 只要我們使用該程序\xa0 \n GUI\xa0 和 鍵盤快捷鍵 就不會更改 \n 這意味著可以以相同的方式在 2D 和 3D 中應用約束 \n 從而在使用\xa0 Solvespace\xa0 更加容易 \n', 'tags': '', 'url': 'SolveSpace.html'}, {'title': 'Solvespace安裝配置', 'text': '先下載\xa0 SolveSpace \n \n 按下\xa0 Download \n \n 點開 \xa0 3.0stable \n \n 就來到 github ，在選擇 \xa0 solvespace.exe\xa0 下載下來 \n \n 下載完後將小白窗開啟，加入\xa0 star %Disk%solvespace.exe \xa0 ，儲存下來 \n \n 重啟 \xa0 start_ipv4 \xa0 後，就會直接開啟\xa0 solvespace \n \n', 'tags': '', 'url': 'Solvespace安裝配置.html'}, {'title': 'Solvespace操作流程', 'text': '先開啟  Solvespace \n \n 在  Sketch  裡的  image  載入圖片 \n \n 將照片載入好後就可以畫圖 \n \n Solvespace\xa0 零組件繪圖操作流程影片 (Youtube) \n \n SolveSpace  零組件繪圖教學影片 (Wink) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Solvespace操作流程.html'}, {'title': 'SolveSpace運動場景', 'text': 'SolveSpace\xa0 零件轉出後轉入  CoppeliaSim  操作影片 \n \n SolveSpace\xa0 零件轉入\xa0 CoppeliaSim \xa0教學影片 (Wink) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'SolveSpace運動場景.html'}, {'title': 'NX', 'text': '\n NX\xa0 是  西門子 Siemens PLM Software\xa0 公司出品的一個產品工程解決方案 \n 它為用户的產品設計及加工過程提供了數字化造型和驗證手段 \n NX\xa0 這是一個交互式  CAD/CAM\xa0計算機輔助設計與計算機輔助製造 系統 \n 它功能強大可以輕鬆實現各種 複雜實體及造型 的建構 \n 它在誕生之初主要基於工作站 \n 但隨着\xa0 PC\xa0 硬件的發展和個人用户的迅速增長 \n 在  PC  上的應用取得了迅猛的增長 \n 已經成為模具行業三維設計的一個 主流應用 \n 來自\xa0 SiemensPLM  的  NX  使企業能夠通過新一代數字化產品開發系統 \n 實現向產品全生命週期管理轉型的目標 \n NX  包含了企業中應用最廣泛的集成應用套件 \n 用於產品設計、工程和製造全範圍的開發過程 \n', 'tags': '', 'url': 'NX.html'}, {'title': 'NX安裝配置', 'text': '下載 NX12可攜版本下載 \xa0( 必須先登入學校 帳號後才能下載 ) \n \n 按下載後解壓縮 \n \n \n', 'tags': '', 'url': 'NX安裝配置.html'}, {'title': 'NX操作流程', 'text': 'NX  零組件繪圖操作流程影片 (Youtube) \n \n NX  零組件繪圖教學影片 (Wink) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'NX操作流程.html'}, {'title': 'NX運動場景', 'text': 'NX\xa0 零件轉出後轉入  CoppeliaSim  操作影片 \n \n NX\xa0 零件轉入  CoppeliaSim  教學影片 (Wink) \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'NX運動場景.html'}, {'title': 'HW1-1', 'text': 'meArm\xa0機械手臂場景組合 \n 將\xa0 meArm\xa0 的零件繪製好後組裝， \n 在  CoppeliaSim \xa0模擬運動， \n 可以透過\xa0 UI\xa0 介面中的  slider  控制各軸作動旋轉的運動模型。 \n \n \n \n \n \n   \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'HW1-1.html'}, {'title': 'HW2', 'text': 'HW2 佔學期成績 20% \n HW2 必須在 2021.12.22 22:00 之前完成. \n HW2 具體項目成果回報區 將於 2021.12.09 開啟, 於  2021.12.22 22:00 關閉. \n meArm 逆向運動學與網際參數式 CAD API 結合應用. \n 請將  https://github.com/mdecourse/meArm  中的 meArm Robot 逆向運動學程式, 改為 Lua 與 Python 程式, 使能套用至 HW1 所完成的 CoppeliaSim meArm 運動模擬場景. 並分別採 Lua, Legacy remote API 及 Bluezero remote API 逆向運動的方式進行控制. \n 請利用  Task2  中的 Solidworks, Inventor 與 NX API 程式控制 meArm Robot 零組件尺寸, 說明並討論如何透過網際程式控制 meArm Robot 的零件尺寸, 並結合上述逆向運動學程式庫, 使得自動化機電產品開發流程更容易滿足客製化需求. \n 參考: \n 2016_ADDITIVE MANUFACTURING PROCESSES FOR FABRICATING A MINI ROBOT - COMPUTATIONAL MODELS AND EXPERIMENTAL RESULTS.pdf \n Robot Manipulator Control with Inverse Kinematics PD-Pseudoinverse Jacobian and Forward Kinematics Denavit Hartenber.pdf \n KINEMATIC ANALYSIS FOR ROBOT ARM.pdf \n https://codebender.cc/user/MeArm \n https://github.com/mdecourse/meArmPi \n /downloads/MeArmPiTechnicalOverviewV0-3DRAFT.pdf \n https://github.com/mdecourse/me-arm-ik \n https://github.com/mdecourse/mearm_model \n https://courses.ece.cornell.edu/ece5990/ECE5725_Fall2016_Projects/pas324_ml634/index.html \n https://github.com/mdecourse/InefficientSkittleSorter \n https://mearm.com \n \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': '說明從 1950 年至 2020 年從 2D CAD 至目前常見的 3D 套件發展分別具備哪些功能與特性。 \n 第一代1946-1958 \n 使用元件 :真空管 \n 軟體 :機器語言或組合語言 \n \n 在1950年代早期的電腦繪圖 (CG，ComputerGraphics) 萌芽初期， \n 電腦本身仍屬於初始的技術研發階段， \n 大致是應用於科學運算的模擬運作，如 太空飛行 、 軍事演模擬 等 \n 此時的電腦繪圖僅限於 數字 的運算 和 科技 的使用範圍， \n 經過電腦的輸出入方法進一步的發展可以直接處理視覺性的圖形之後， \n 電腦開始引起了一些從事藝術工作者的注意， \n 於是利用電腦從事藝術創作的活動便逐漸的活躍了起來。 \n \n 第二代1959-1964 \n 使用元件 : 使用電晶體 \n 軟體 : 高階語言或等來設計應用程式 \n \n 在1960年代在美國波音公司的研究報告中 出現了「 電腦繪圖 」。 \n 這一時期大部分藝術家停在觀望的腳步， \n 主要電腦繪圖的研究人員仍是科學家， \n 由於在發展的初期電腦繪圖必須由人設計程式的方式展現， \n 操空介面 人性化程度低 ， \n 此階段所呈現的作品以 點線面 的變化為主， \n 此時的作品以 數學運算為基礎 ， \n 在呈現上非常難以直觀與具體的控制呈現， \n 直到 數位描繪板 的發明， \n 電腦繪圖對使用者而言可以說是劃時代的突破。 \n \n 第三代1965-1970 \n 使用元件 : 使用機體電路IC \n 軟體 : 繼續發展簡易的 高階語言，使用作業系統與套裝軟體是本階段的重要特色 \n \n \n 第四代1971-今日 \n 使用元件 : 使用大型機體電路LSI或使用超大型機體電路VLSI \n 軟體 : 以功能導向接近自然語言的第四代電腦語言 \n \n 1970年代以後，在電子科技的強 勁發展中產生了功能強大的「 超大型積體電路 」， \n 之後產生的第四代電腦不斷升級發展， 個人微電腦時代 已經來臨了， \n 此時期由於電腦體積縮小了許多，也不再是高價電腦時代。 \n 自1984年美國蘋果電腦公司發展麥金塔電腦系統以來， \n 短短十年間，設計者對此軟硬體之神奇著迷不已， \n 改變了設計者之思考及工作方式，我們稱為 電腦革命 。 \n 多媒體時代 的來臨也是一個明顯的發展，這種 整合科技 應用在藝術上的表現方式， \n 就是把攝影、電影、通訊、視訊、音樂、表演等特殊的專業知識結合電腦一起運用， \n 此時的電腦藝術創作，已經跳離了單人的藝術創作層面，而進入集體創作的型態。 \n 現今的電腦繪圖發展多彩多姿， \n 虛擬實境技術發明 、 娛樂遊戲方面 、 設計與藝術方面 、 醫療方面 、 軍事科技方面 等， \n 上述 只是電腦繪圖在今日的部分應用， \n 電腦繪圖正改變人的圖文傳播與呈現方式， \n 可預期電腦繪圖在未來的發展中， \n 只要是有關圖文的產業發展， \n 絕對是成為非常重要的工具之一， \n 電腦繪圖的發展與知識將會成為在人類歷史中重要的一環。 \n 在 Generative Design 與 Deep Reinforcement Learning 的帶動下，未來的 3D CAD 可能會有何種樣貌? \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Final Project', 'text': '請自選  CAD  套件 完成零組件繪圖後，  \n 轉入  CoppeliaSim\xa0 以  Slider 0-360  度控制藍色搖桿轉動。 \n 零件繪製 \n \n \n \n \n \n \n \n \n 零件組合圖 \n \n 連桿機構繪圖組合影片 \n \n 連桿機構CoppeliaSim影片 \n \n 以相同尺寸完成對稱之連桿機構， \xa0 \n 從 CAD 套件轉入 CoppeliaSim 以 Slider 0-360 度控制 Point0-Point1 搖桿轉動。 \n \n 對稱之連桿機構CoppeliaSim影片 \n \n \n 這學期分配到\xa0Solvespace\xa0及 NX， \n 之前都沒接觸過這兩款繪圖軟體， \n 趁著這次機會學會了利用這兩個軟體來製圖， \n 將零件組裝完後在\xa0CoppeliaSim\xa0進行操作。 \n Solvespace \n SolveSpace\xa0 是一個免費和開源的\xa0 2D \xa0和\xa0 3D CAD \xa0 程序， \n 它是一個基於約束的 參數建模器 ，具有簡單的機械仿真功能。 \n 先下載 \xa0 SolveSpace \n \n 按下\xa0 Download \n \n 點開 \xa0 3.0stable \n \n 就來到 github ，在選擇 \xa0 solvespace.exe\xa0 下載下來 \n \n 下載完後將小白窗開啟，加入\xa0 star %Disk%solvespace.exe \xa0 ，儲存下來 \n \n 重啟 \xa0 start_ipv4 \xa0 後，就會直接開啟\xa0 solvespace \n SolveSpace下載 影片 \n \n \n SolveSpace繪圖影片 \n \n NX \n NX\xa0是 \xa0 西門子 Siemens PLM Software \xa0 公司出品的一個產品工程解決方案， \n 它為用户的產品設計及加工過程提供了數字化造型和驗證手段， \n NX\xa0這是一個交互式 \xa0 CAD/CAM \xa0 計算機輔助設計與計算機輔助製造 系統 ， \n 它功能強大可以輕鬆實現各種複雜實體及造型的建構。 \n NX\xa0繪圖影片 \n \n CoppeliaSim \n 將\xa0 meArm \xa0 的零件繪製好後組裝，在 \xa0 CoppeliaSim\xa0模擬運動， \n 可以透過\xa0 UI \xa0 介面中的 \xa0 slider \xa0 控制各軸作動旋轉的運動模型。 \n meArm機構CoppeliaSim影片 \n \n \n 再來還有學習如何使用\xa0wink\xa0來製作影片，並放上自己的網站上面 \n wink \n wink \xa0製作影片是用多張照片 截圖編輯 ， \n 在這些照片上面編輯文字或鼠標， \n 形成一部影片。 \n Google尋找 \xa0 debugmode wink \n \n 將 \xa0 wink \xa0 下載 \n \n 點開 \xa0 winksetup ，按下 \xa0 I Agree \n \n 按\xa0 Browse\xa0 將資料存在\xa0 date\xa0 裡的\xa0 wink ，最後\xa0 Install\xa0 就下載好了 \n \n 點開 \xa0 wink.exe \n \n 開啟後就可以使用 \xa0 wink \xa0 製作影片 \n \n wink下載影片 \n \n 將\xa0 wink\xa0 放進倉儲裡面 \n 先到老師的\xa0 wink\xa0 影片開啟原始碼 \n \n 複製原始碼 \n 將複製下來的原始碼貼在\xa0 Source code \n \n 接著開啟錄好的\xa0 wink\xa0 影片開啟原始碼 \n \n 在複製一次原始碼 \n \n 將複製下來的原始碼貼在\xa0 Source code \n 並且修改 \n <video width="960" height="540" \xa0(影片的尺寸) \n data-dirname=" /static " data-varname="winkVideoData" video=""> \n <source src=" /downloads/ wink 4.mp4" \n \n 要將影片放進\xa0 downloads \xa0 裡面 \n \n 就可以看到\xa0 wink\xa0 影片 \n \n wink放進網站影片 \n \n \n 說明從 1950 年至 2020 年從 2D CAD 至目前常見的 3D 套件發展分別具備哪些功能與特性。 \n 第一代1946-1958 \n 使用元件 :真空管 \n 軟體 :機器語言或組合語言 \n \n 在1950年代早期的電腦繪圖 (CG，ComputerGraphics) 萌芽初期， \n 電腦本身仍屬於初始的技術研發階段， \n 大致是應用於科學運算的模擬運作，如 太空飛行 、 軍事演模擬 等 \n 此時的電腦繪圖僅限於 數字 的運算 和 科技 的使用範圍， \n 經過電腦的輸出入方法進一步的發展可以直接處理視覺性的圖形之後， \n 電腦開始引起了一些從事藝術工作者的注意， \n 於是利用電腦從事藝術創作的活動便逐漸的活躍了起來。 \n \n 第二代1959-1964 \n 使用元件 : 使用電晶體 \n 軟體 : 高階語言或等來設計應用程式 \n \n 在1960年代在美國波音公司的研究報告中 出現了「 電腦繪圖 」。 \n 這一時期大部分藝術家停在觀望的腳步， \n 主要電腦繪圖的研究人員仍是科學家， \n 由於在發展的初期電腦繪圖必須由人設計程式的方式展現， \n 操空介面 人性化程度低 ， \n 此階段所呈現的作品以 點線面 的變化為主， \n 此時的作品以 數學運算為基礎 ， \n 在呈現上非常難以直觀與具體的控制呈現， \n 直到 數位描繪板 的發明， \n 電腦繪圖對使用者而言可以說是劃時代的突破。 \n \n 第三代1965-1970 \n 使用元件 : 使用機體電路IC \n 軟體 : 繼續發展簡易的 高階語言，使用作業系統與套裝軟體是本階段的重要特色 \n \n \n 第四代1971-今日 \n 使用元件 : 使用大型機體電路LSI或使用超大型機體電路VLSI \n 軟體 : 以功能導向接近自然語言的第四代電腦語言 \n \n 1970年代以後，在電子科技的強 勁發展中產生了功能強大的「 超大型積體電路 」， \n 之後產生的第四代電腦不斷升級發展， 個人微電腦時代 已經來臨了， \n 此時期由於電腦體積縮小了許多，也不再是高價電腦時代。 \n 自1984年美國蘋果電腦公司發展麥金塔電腦系統以來， \n 短短十年間，設計者對此軟硬體之神奇著迷不已， \n 改變了設計者之思考及工作方式，我們稱為 電腦革命 。 \n 多媒體時代 的來臨也是一個明顯的發展，這種 整合科技 應用在藝術上的表現方式， \n 就是把攝影、電影、通訊、視訊、音樂、表演等特殊的專業知識結合電腦一起運用， \n 此時的電腦藝術創作，已經跳離了單人的藝術創作層面，而進入集體創作的型態。 \n 現今的電腦繪圖發展多彩多姿， \n 虛擬實境技術發明 、 娛樂遊戲方面 、 設計與藝術方面 、 醫療方面 、 軍事科技方面 等， \n 上述 只是電腦繪圖在今日的部分應用， \n 電腦繪圖正改變人的圖文傳播與呈現方式， \n 可預期電腦繪圖在未來的發展中， \n 只要是有關圖文的產業發展， \n 絕對是成為非常重要的工具之一， \n 電腦繪圖的發展與知識將會成為在人類歷史中重要的一環。 \n', 'tags': '', 'url': 'Final Project.html'}, {'title': '期末考試', 'text': '第一階段 : 請將自己所完成繪製的 meArm Robot 零件與組立檔案畫面呈現在網頁中， \n  並將所有零件與組立檔案壓縮成"學號_final.zip" 送到個人的\xa0 GDrive，並將連結轉為公開下載。 \n meArm Robot 零件與組立檔下載 \n https://drive.google.com/file/d/1E040yAglk14i4q_jkw9qVQkEhlMPF8lV/view?usp=sharing \n \n \n 第二階段 : 請修改第一階段個人所完成的 meArm 組立檔案， \n 將兩側連桿機構互換， 即將帶有三角形連桿的機構與另一方機構互相對調。 \n 完成後在網頁中呈現所完成的組立圖畫面， \n 並將零組件檔案壓縮成"學號_final_stage2.zip" 送到個人的 \xa0GDrive， 並將連結轉為公開下載。 \n meArm 零件與組立檔下載 \n https://drive.google.com/file/d/1hkae5JA148rwG2aVY1FEd3FtQfKxp8c7/view?usp=sharing \n \n \n 第三階段: 請將第二階段新完成的 meArm 零組件轉入 CoppeliaSim 後, 利用 Slider 控制其中的各轉動軸, 完成後請以 Wink 影片呈現製作過程, 並將"學號_final.ttt" 檔案壓縮為"學號_final_ttt.zip" 送到個人的 \xa0 @gm \xa0 帳號 GDrive, 並將連結轉為公開下載.', 'tags': '', 'url': '期末考試.html'}]};